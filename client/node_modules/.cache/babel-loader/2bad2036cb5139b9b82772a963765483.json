{"ast":null,"code":"var _jsxFileName = \"/Users/sylvia/Documents/Blog/client/src/components/Form/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport importGoogleFonts from \"import-google-fonts\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDiv = styled.div``;\n_c = MainDiv;\nconst GoogleFonts = importGoogleFonts(createGlobalStyle, null, [\"Abril Fatface\"], [\"Aclonica\"]);\nconst Header = styled.h2`\n    font-family: \"Abril Fatface\";\n    font-size: 90px;\n    font-weight: 700;\n    line-height: 94px;\n    color: white;\n    margin-top: 100px;\n  `;\n_c2 = Header;\nconst Forum = styled.form``;\n_c3 = Forum;\nconst Button = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #fc00ff 0%,\n    #00dbde 51%,\n    #fc00ff 100%\n  );\n  font-family: \"Aclonica\";\n  font-size: 40px;\n  margin: 10px;\n  padding: 10px 45px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 2px #fc00ff; */\n  border-radius: 10px;\n  width: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n_c4 = Button;\n\nfunction Form() {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(MainDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \" Create a Post! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Forum, {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Creator\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        name: \"author\",\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Text\",\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"text\",\n        name: \"message\",\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"Text\",\n        children: \"Hastags:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tags\",\n        name: \"tags\",\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"JQcWR9Y6CAOYNAZ/gQ+hH4lorYI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c5 = Form;\n;\nexport default Form;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"MainDiv\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Forum\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Form\");","map":{"version":3,"sources":["/Users/sylvia/Documents/Blog/client/src/components/Form/form.js"],"names":["React","useState","styled","createGlobalStyle","importGoogleFonts","useDispatch","useSelector","FileBase","MainDiv","div","GoogleFonts","Header","h2","Forum","form","Button","button","Form","postData","setPostData","creator","title","message","tags","selectedFile","post","state","currentId","posts","find","_id","dispatch","handleSubmit","classes","root","e","target","value","fileInput","base64"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,OAAO,GAAGN,MAAM,CAACO,GACtB,EADD;KAAMD,O;AAGN,MAAME,WAAW,GAAGN,iBAAiB,CACjCD,iBADiC,EAEjC,IAFiC,EAGjC,CAAC,eAAD,CAHiC,EAIjC,CAAC,UAAD,CAJiC,CAArC;AAOE,MAAMQ,MAAM,GAAGT,MAAM,CAACU,EAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAPE;MAAMD,M;AASN,MAAME,KAAK,GAAGX,MAAM,CAACY,IACpB,EADD;MAAMD,K;AAGP,MAAME,MAAM,GAAGb,MAAM,CAACc,MAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBC;MAAMD,M;;AA2BP,SAASE,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AAAEmB,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,KAAK,EAAE,EAAtB;AAA0BC,IAAAA,OAAO,EAAE,EAAnC;AAAuCC,IAAAA,IAAI,EAAE,EAA7C;AAAiDC,IAAAA,YAAY,EAAE;AAA/D,GAAD,CAAxC;AACA,QAAMC,IAAI,GAAGnB,WAAW,CAAEoB,KAAD,IAAYC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAkBP,OAAD,IAAaA,OAAO,CAACQ,GAAR,KAAgBH,SAA9C,CAAH,GAA8D,IAApF,CAAxB;AACA,QAAMI,QAAQ,GAAG1B,WAAW,EAA5B;;AACA,QAAO2B,YAAY,GAAG,MAAK,CAE1B,CAFD;;AAGA,sBACI,QAAC,OAAD;AAAA,4BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEI,QAAC,KAAD;AAAO,MAAA,YAAY,EAAC,KAApB;AAA0B,MAAA,UAAU,MAApC;AAAqC,MAAA,SAAS,EAAG,GAAEC,OAAO,CAACC,IAAK,IAAGD,OAAO,CAACnB,IAAK,EAAhF;AAAmF,MAAA,QAAQ,EAAEkB,YAA7F;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,IAAI,EAAC,QAApC;AAA6C,QAAA,KAAK,EAAEd,QAAQ,CAACE,OAA7D;AAAsE,QAAA,QAAQ,EAAGe,CAAD,IAAOhB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,UAAAA,OAAO,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAjC,SAAD;AAAlG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,OAAtB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,KAAK,EAAEnB,QAAQ,CAACG,KAA3D;AAAkE,QAAA,QAAQ,EAAGc,CAAD,IAAOhB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,UAAAA,KAAK,EAAEc,CAAC,CAACC,MAAF,CAASC;AAA/B,SAAD;AAA9F;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAC,SAAlC;AAA4C,QAAA,KAAK,EAAEnB,QAAQ,CAACI,OAA5D;AAAqE,QAAA,QAAQ,EAAGa,CAAD,IAAOhB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,UAAAA,OAAO,EAAEa,CAAC,CAACC,MAAF,CAASC;AAAjC,SAAD;AAAjG;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAwC,QAAA,KAAK,EAAEnB,QAAQ,CAACK,IAAxD;AAA8D,QAAA,QAAQ,EAAGY,CAAD,IAAOhB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,UAAAA,IAAI,EAAEY,CAAC,CAACC,MAAF,CAASC;AAA9B,SAAD;AAA1F;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACK,SAAxB;AAAA,+BAAmC,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAEC,cAAAA;AAAF,aAAD;AAAA,mBAAgBpB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,cAAAA,YAAY,EAAEe;AAA7B,aAAD,CAA3B;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA1BQtB,I;UAEQX,W,EACID,W;;;MAHZY,I;AA0BR;AACD,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport importGoogleFonts from \"import-google-fonts\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nconst MainDiv = styled.div\n``\n\nconst GoogleFonts = importGoogleFonts(\n    createGlobalStyle,\n    null,\n    [\"Abril Fatface\"],\n    [\"Aclonica\"]\n  );\n  \n  const Header = styled.h2`\n    font-family: \"Abril Fatface\";\n    font-size: 90px;\n    font-weight: 700;\n    line-height: 94px;\n    color: white;\n    margin-top: 100px;\n  `;\n\n  const Forum = styled.form\n  ``\n\n const Button = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #fc00ff 0%,\n    #00dbde 51%,\n    #fc00ff 100%\n  );\n  font-family: \"Aclonica\";\n  font-size: 40px;\n  margin: 10px;\n  padding: 10px 45px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 2px #fc00ff; */\n  border-radius: 10px;\n  width: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n  \nfunction Form() {\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n    const dispatch = useDispatch();\n    const  handleSubmit = () =>{\n\n    }\n    return(\n        <MainDiv>\n             <Header> Create a Post! </Header>\n            <Forum autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <label for=\"Creator\">Author</label>\n                <input type=\"text\" id=\"author\" name=\"author\" value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })}  />\n                <label for=\"Title\">Title:</label>\n                <input type=\"text\" id=\"title\" name=\"title\" value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <label for=\"Text\">Text:</label>\n                <input type=\"text\" id=\"text\" name=\"message\" value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n                <label for=\"Text\">Hastags:</label>\n                <input type=\"text\" id=\"tags\" name=\"tags\"value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value })}/>\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n                <Button type='submit'>Submit</Button>\n\n                \n            </Forum>\n        </MainDiv>\n    )\n};\nexport default Form"]},"metadata":{},"sourceType":"module"}