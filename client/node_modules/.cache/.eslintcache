[{"/Users/sylvia/Documents/Blog/client/src/index.js":"1","/Users/sylvia/Documents/Blog/client/src/App.js":"2","/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js":"3","/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js":"4","/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js":"5","/Users/sylvia/Documents/Blog/client/src/components/Post/post.js":"6","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js":"7","/Users/sylvia/Documents/Blog/client/src/actions/post.js":"8","/Users/sylvia/Documents/Blog/client/src/reducers/index.js":"9","/Users/sylvia/Documents/Blog/client/src/reducers/posts.js":"10","/Users/sylvia/Documents/Blog/client/src/API/index.js":"11","/Users/sylvia/Documents/Blog/client/src/api/index.js":"12","/Users/sylvia/Documents/Blog/client/src/components/Navbar/Navbar.js":"13","/Users/sylvia/Documents/Blog/client/src/components/Home/home.js":"14","/Users/sylvia/Documents/Blog/client/src/reducers/auth.js":"15","/Users/sylvia/Documents/Blog/client/src/Auth/auth.js":"16","/Users/sylvia/Documents/Blog/client/src/Auth/input.js":"17","/Users/sylvia/Documents/Blog/client/src/actions/auth.js":"18"},{"size":508,"mtime":1642965158301,"results":"19","hashOfConfig":"20"},{"size":714,"mtime":1644200324003,"results":"21","hashOfConfig":"20"},{"size":2121,"mtime":1644090632526,"results":"22","hashOfConfig":"20"},{"size":245,"mtime":1642735698598,"results":"23","hashOfConfig":"20"},{"size":891,"mtime":1643423358712,"results":"24","hashOfConfig":"20"},{"size":2907,"mtime":1644784329307,"results":"25","hashOfConfig":"20"},{"size":5143,"mtime":1644784343185,"results":"26","hashOfConfig":"20"},{"size":1153,"mtime":1643265191236,"results":"27","hashOfConfig":"20"},{"size":147,"mtime":1643851819828,"results":"28","hashOfConfig":"20"},{"size":560,"mtime":1643857311340,"results":"29","hashOfConfig":"20"},{"size":789,"mtime":1644808971461,"results":"30","hashOfConfig":"20"},{"size":416,"mtime":1643073996098,"results":"31","hashOfConfig":"20"},{"size":2245,"mtime":1644605614030,"results":"32","hashOfConfig":"20"},{"size":853,"mtime":1643564563577,"results":"33","hashOfConfig":"20"},{"size":423,"mtime":1644809329147,"results":"34","hashOfConfig":"20"},{"size":5816,"mtime":1644807543700,"results":"35","hashOfConfig":"20"},{"size":1217,"mtime":1644272840316,"results":"36","hashOfConfig":"20"},{"size":681,"mtime":1644784094372,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4z0ace",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/sylvia/Documents/Blog/client/src/index.js",[],["80","81"],"/Users/sylvia/Documents/Blog/client/src/App.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js",[],"/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js",[],["82","83"],"/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Post/post.js",[],["84","85"],"/Users/sylvia/Documents/Blog/client/src/components/Form/form.js",["86"],"import React, { useState, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport importGoogleFonts from \"import-google-fonts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { createPost, updatePost } from \"../../actions/post\";\nimport formpic from \"../media/formpic.svg\";\n\nconst MainDiv = styled.div`\n  display: flex;\n  align-items: center;\n  flex: wrap;\n  justify-content: center;\n  border-top: 120px;\n  flex-wrap: wrap;\n`;\nconst FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst GoogleFonts = importGoogleFonts(\n  createGlobalStyle,\n  null,\n  [\"Abril Fatface\"],\n  [\"Aclonica\"]\n);\n\nconst Header = styled.h1`\n  font-family: \"Abril Fatface\";\n  font-size: 90px;\n  font-weight: 700;\n  line-height: 94px;\n  color: white;\n`;\n\nconst Forum = styled.form`\n  background-color: #08080a45;\n  height: 700px;\n  width: 400px;\n  padding: 40px 80px;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-family: monospace;\n  justify-content: space-between;\n  font-size: large;\n  border: 2px solid pink;\n`;\n\nconst H3 = styled.h1`\n  color: coral;\n  text-align: center;\n`;\n\nconst Image= styled.img`\nheight: 900px;\nwidth: 900px;\n`\n\nconst Button = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #fc00ff 0%,\n    #00dbde 51%,\n    #fc00ff 100%\n  );\n\n  margin: 50px 0px;\n  font-family: \"Aclonica\";\n  font-size: 20px;\n  margin: 10px;\n  padding: 10px 45px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 2px #fc00ff; */\n  border-radius: 10px;\n  width: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n\nconst Button2 = styled.button`\n  display: inline-block;\n   padding: 0.35em 1.2em;\n   border: 0.1em solid #ffffff;\n   margin: 0 0.3em 0.3em 0;\n   border-radius: 0.12em;\n   box-sizing: border-box;\n   text-decoration: none;\n   font-family: \"Roboto\", sans-serif;\n   font-weight: 300;\n   color: #ffffff;\n   text-align: center;\n  background-color: #ffffff00;\n  height: 32px;\n\n  &:hover {\n     color: #000000;\n     background-color: #ffffff;\n  }\n`;\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <MainDiv id=\"form\">\n      <Image src={formpic} />\n      <FormDiv>\n      <Header> {currentId ? \"Editing\" : \"Create\"} a Post! </Header>\n      <Forum autoComplete=\"off\" onSubmit={handleSubmit}>\n        <H3> {currentId ? \"Editing your post\" : \"Write..\"}</H3>\n        <label for=\"Creator\">Author</label>\n        <input\n          type=\"text\"\n          id=\"author\"\n          name=\"author\"\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <label for=\"Title\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <label for=\"Text\">Text:</label>\n        <input\n          type=\"text\"\n          id=\"text\"\n          name=\"message\"\n          maxLength=\"300\"\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <label for=\"Text\">Hastags:</label>\n        <input\n          type=\"text\"\n          id=\"tags\"\n          name=\"tags\"\n          maxLength=\"30\"\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <ButtonDiv>\n          <Button type=\"submit\">Submit</Button>\n        </ButtonDiv>\n        <ButtonDiv>\n          <Button2 onClick={clear}>clear</Button2>\n        </ButtonDiv>\n      </Forum>\n      </FormDiv>\n    </MainDiv>\n  );\n};\nexport default Form;\n\n//currentID required to link with form to edit it from the post\n","/Users/sylvia/Documents/Blog/client/src/actions/post.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/index.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/posts.js",["87"],"export default (posts = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return action.payload;\n    case \"LIKE\":\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case \"CREATE\":\n      return [...posts, action.payload];\n    case \"UPDATE\":\n      return posts.map((post) => (post._id === action.payload._id ? action.payload._id : post));\n    case \"DELETE\":\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n//action.payload= updated posts\n","/Users/sylvia/Documents/Blog/client/src/API/index.js",[],"/Users/sylvia/Documents/Blog/client/src/api/index.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Navbar/Navbar.js",["88"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Typography, Toolbar, Avatar, Button } from \"@material-ui/core\";\nimport Auth from \"../../Auth/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport decode from 'jwt-decode';\n\nconst Profile = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n  align-items: center;\n  /* background: #37303c36; */\n  height: 80px;\n  width: 100%;\n`;\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n\n  const logout = () => {\n    dispatch({ type: \"LOGOUT\" });\n    navigate('/auth', {replace: true});\n    setUser(null)\n  };\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  //want to use this when we swtich from /auth-->/ .: useLocation\n\n  return (\n    <AppBar position=\"static\" style={{ backgroundColor: \"#37303c36\" }}>\n      <Toolbar>\n        {user?.result ? (\n          <Profile>\n            <Typography variant=\"h6\">{user?.result.name.charAt(0)} </Typography>\n            <Avatar\n              alt={user?.result.name}\n              src={user?.result.imageUrl}\n              style={{\n                margin: \"10px\",\n                borderRadius: \"50%\",\n                border: \"2px solid white\",\n              }}\n            >\n              {user?.result.name.charAt(0)}\n            </Avatar>\n            <Button variant=\"contained\" color=\"secondary\" onClick={logout}>\n              Logout\n            </Button>\n          </Profile>\n        ) : (\n          <Link to=\"/auth\" component={<Auth />}>\n            {\" \"}\n            <Button variant=\"contained\" color=\"primary\">\n              {\" \"}\n              Sign In\n            </Button>\n          </Link>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/sylvia/Documents/Blog/client/src/components/Home/home.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/auth.js",[],"/Users/sylvia/Documents/Blog/client/src/Auth/auth.js",[],"/Users/sylvia/Documents/Blog/client/src/Auth/input.js",[],"/Users/sylvia/Documents/Blog/client/src/actions/auth.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"91","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":30,"column":7,"nodeType":"99","messageId":"100","endLine":30,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":16,"endColumn":3},{"ruleId":"104","severity":1,"message":"105","line":43,"column":6,"nodeType":"106","endLine":43,"endColumn":16,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],["108"],["109"],"no-unused-vars","'GoogleFonts' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"113","text":"114"},[1172,1182],"[location, logout, user?.token]"]