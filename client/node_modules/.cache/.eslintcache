[{"/Users/sylvia/Documents/Blog/client/src/index.js":"1","/Users/sylvia/Documents/Blog/client/src/App.js":"2","/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js":"3","/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js":"4","/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js":"5","/Users/sylvia/Documents/Blog/client/src/components/Post/post.js":"6","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js":"7","/Users/sylvia/Documents/Blog/client/src/actions/post.js":"8","/Users/sylvia/Documents/Blog/client/src/reducers/index.js":"9","/Users/sylvia/Documents/Blog/client/src/reducers/posts.js":"10","/Users/sylvia/Documents/Blog/client/src/API/index.js":"11","/Users/sylvia/Documents/Blog/client/src/api/index.js":"12","/Users/sylvia/Documents/Blog/client/src/components/Navbar/Navbar.js":"13","/Users/sylvia/Documents/Blog/client/src/components/Home/home.js":"14","/Users/sylvia/Documents/Blog/client/src/Auth/auth.js":"15"},{"size":508,"mtime":1642965158301,"results":"16","hashOfConfig":"17"},{"size":714,"mtime":1643565497249,"results":"18","hashOfConfig":"17"},{"size":2135,"mtime":1643360222366,"results":"19","hashOfConfig":"17"},{"size":245,"mtime":1642735698598,"results":"20","hashOfConfig":"17"},{"size":891,"mtime":1643423358712,"results":"21","hashOfConfig":"17"},{"size":2920,"mtime":1643504846484,"results":"22","hashOfConfig":"17"},{"size":5143,"mtime":1643502774916,"results":"23","hashOfConfig":"17"},{"size":1153,"mtime":1643265191236,"results":"24","hashOfConfig":"17"},{"size":114,"mtime":1643265537939,"results":"25","hashOfConfig":"17"},{"size":559,"mtime":1643263597872,"results":"26","hashOfConfig":"17"},{"size":407,"mtime":1643229894758,"results":"27","hashOfConfig":"17"},{"size":416,"mtime":1643073996098,"results":"28","hashOfConfig":"17"},{"size":1052,"mtime":1643565110620,"results":"29","hashOfConfig":"17"},{"size":853,"mtime":1643564563577,"results":"30","hashOfConfig":"17"},{"size":2882,"mtime":1643565105967,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4z0ace",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"/Users/sylvia/Documents/Blog/client/src/index.js",[],["68","69"],"/Users/sylvia/Documents/Blog/client/src/App.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js",[],"/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js",[],["70","71"],"/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Post/post.js",["72"],"import React from \"react\";\nimport {\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n} from \"@material-ui/core/\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { likePost, deletePost } from \"../../actions/post\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  background-image: linear-gradient(to bottom, #ff000000 , #000000e0);\n  height: 480px;\n  width: 350px;\n  border-radius: 25px;\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* &:hover {\n    transform: translateY(-10px);\n     background-image: linear-gradient(to bottom, #ff000000 , #000000e0);\n  } */\n`;\n\nconst ImageFile = styled.img`\n  height: 480px;\n  width: 350px;\n  z-index: -1;\n  position: absolute;\n  border-radius: 25px;\n`;\n\nconst Typography = styled.p`\n  color: white;\n  font-family: 'Rubik', sans-serif;\n  text-align: center;\n`;\nconst Message = styled.p`\n  color: white;\n  font-family: 'Rubik', sans-serif;\n`;\n\nconst CreatorTimeDiv = styled.div`\n  display: flex;\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst Title = styled.h2`\n  font-family: \"Abril Fatface\";\n  color: white;\n  text-align: center;\n  text-shadow: 2px 2px black;\n  font-size: 25px;\n  letter-spacing: 0.8px;\n`;\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Card>\n      <ImageFile src={post.selectedFile} title={post.title} />\n      <CreatorTimeDiv>\n        <Typography variant=\"h6\">{post.creator}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </CreatorTimeDiv>\n      <div></div>\n      <Title>{post.title}</Title>\n      <CardContent>\n        <Message>\n          {post.message}\n        </Message>\n      </CardContent>\n      <div>\n        <Typography variant=\"body2\" style={{color: \"#8947ef\"}} component=\"h2\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <CardActions style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n        <Button\n          size=\"small\"\n          style={{color: \"#8947ef\"}}\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount}{\" \"}\n        </Button>\n        <Button\n          size=\"small\"\n          style={{color: \"#8947ef\"}}\n          onClick={() => dispatch(deletePost(post._id))}\n        >\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => setCurrentId(post._id)}\n        >\n          <MoreHorizIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js",["73"],"import React, { useState, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport importGoogleFonts from \"import-google-fonts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { createPost, updatePost } from \"../../actions/post\";\nimport formpic from \"../media/formpic.svg\";\n\nconst MainDiv = styled.div`\n  display: flex;\n  align-items: center;\n  flex: wrap;\n  justify-content: center;\n  border-top: 120px;\n  flex-wrap: wrap;\n`;\nconst FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst GoogleFonts = importGoogleFonts(\n  createGlobalStyle,\n  null,\n  [\"Abril Fatface\"],\n  [\"Aclonica\"]\n);\n\nconst Header = styled.h1`\n  font-family: \"Abril Fatface\";\n  font-size: 90px;\n  font-weight: 700;\n  line-height: 94px;\n  color: white;\n`;\n\nconst Forum = styled.form`\n  background-color: #08080a45;\n  height: 700px;\n  width: 400px;\n  padding: 40px 80px;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-family: monospace;\n  justify-content: space-between;\n  font-size: large;\n  border: 2px solid pink;\n`;\n\nconst H3 = styled.h1`\n  color: coral;\n  text-align: center;\n`;\n\nconst Image= styled.img`\nheight: 900px;\nwidth: 900px;\n`\n\nconst Button = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #fc00ff 0%,\n    #00dbde 51%,\n    #fc00ff 100%\n  );\n\n  margin: 50px 0px;\n  font-family: \"Aclonica\";\n  font-size: 20px;\n  margin: 10px;\n  padding: 10px 45px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 2px #fc00ff; */\n  border-radius: 10px;\n  width: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n\nconst Button2 = styled.button`\n  display: inline-block;\n   padding: 0.35em 1.2em;\n   border: 0.1em solid #ffffff;\n   margin: 0 0.3em 0.3em 0;\n   border-radius: 0.12em;\n   box-sizing: border-box;\n   text-decoration: none;\n   font-family: \"Roboto\", sans-serif;\n   font-weight: 300;\n   color: #ffffff;\n   text-align: center;\n  background-color: #ffffff00;\n  height: 32px;\n\n  &:hover {\n     color: #000000;\n     background-color: #ffffff;\n  }\n`;\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <MainDiv id=\"form\">\n      <Image src={formpic} />\n      <FormDiv>\n      <Header> {currentId ? \"Editing\" : \"Create\"} a Post! </Header>\n      <Forum autoComplete=\"off\" onSubmit={handleSubmit}>\n        <H3> {currentId ? \"Editing your post\" : \"Write..\"}</H3>\n        <label for=\"Creator\">Author</label>\n        <input\n          type=\"text\"\n          id=\"author\"\n          name=\"author\"\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <label for=\"Title\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <label for=\"Text\">Text:</label>\n        <input\n          type=\"text\"\n          id=\"text\"\n          name=\"message\"\n          maxLength=\"300\"\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <label for=\"Text\">Hastags:</label>\n        <input\n          type=\"text\"\n          id=\"tags\"\n          name=\"tags\"\n          maxLength=\"30\"\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <ButtonDiv>\n          <Button type=\"submit\">Submit</Button>\n        </ButtonDiv>\n        <ButtonDiv>\n          <Button2 onClick={clear}>clear</Button2>\n        </ButtonDiv>\n      </Forum>\n      </FormDiv>\n    </MainDiv>\n  );\n};\nexport default Form;\n\n//currentID required to link with form to edit it from the post\n","/Users/sylvia/Documents/Blog/client/src/actions/post.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/index.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/posts.js",["74"],"export default(posts = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return action.payload;\n    case \"LIKE\":\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case \"CREATE\":\n      return [...posts, action.payload];\n    case \"UPDATE\":\n      return posts.map((post) => (post._id === action.payload._id ? action.payload._id : post));\n    case \"DELETE\":\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n//action.payload= updated posts\n","/Users/sylvia/Documents/Blog/client/src/API/index.js",[],"/Users/sylvia/Documents/Blog/client/src/api/index.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Navbar/Navbar.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Home/home.js",[],"/Users/sylvia/Documents/Blog/client/src/Auth/auth.js",["75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport styled from \"styled-components\";\n\nconst MainDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 0px;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Auth = () => {\n  return (\n    <MainDiv>\n      <Form>\n          <h1>hellow !!!</h1>\n        {/* <Avatar >\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form onSubmit={handleSubmit}>\n            <FormDiv>\n                  { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n            </FormDiv>\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          <GoogleLogin\n            clientId=\"564033717568-e5p23rhvcs4i6kffgsbci1d64r8hp6fn.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n            <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form> */}\n      </Form>\n    </MainDiv>\n  );\n};\nexport default Auth;",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":30,"column":7,"nodeType":"95","messageId":"96","endLine":30,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","endLine":16,"endColumn":3},{"ruleId":"93","severity":1,"message":"101","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"102","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":4,"column":3,"nodeType":"95","messageId":"96","endLine":4,"endColumn":9},{"ruleId":"93","severity":1,"message":"104","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":9},{"ruleId":"93","severity":1,"message":"105","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":8},{"ruleId":"93","severity":1,"message":"106","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":7},{"ruleId":"93","severity":1,"message":"107","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":13},{"ruleId":"93","severity":1,"message":"108","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"93","severity":1,"message":"109","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":20},{"ruleId":"93","severity":1,"message":"110","line":12,"column":10,"nodeType":"95","messageId":"96","endLine":12,"endColumn":21},{"ruleId":"93","severity":1,"message":"111","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":24},{"ruleId":"93","severity":1,"message":"112","line":32,"column":7,"nodeType":"95","messageId":"96","endLine":32,"endColumn":14},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'GoogleFonts' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useDispatch' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'useHistory' is defined but never used.","'GoogleLogin' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FormDiv' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]