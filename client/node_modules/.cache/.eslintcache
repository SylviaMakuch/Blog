[{"/Users/sylvia/Documents/Blog/client/src/index.js":"1","/Users/sylvia/Documents/Blog/client/src/App.js":"2","/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js":"3","/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js":"4","/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js":"5","/Users/sylvia/Documents/Blog/client/src/components/Post/post.js":"6","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js":"7","/Users/sylvia/Documents/Blog/client/src/actions/post.js":"8","/Users/sylvia/Documents/Blog/client/src/reducers/index.js":"9","/Users/sylvia/Documents/Blog/client/src/reducers/posts.js":"10","/Users/sylvia/Documents/Blog/client/src/API/index.js":"11","/Users/sylvia/Documents/Blog/client/src/api/index.js":"12","/Users/sylvia/Documents/Blog/client/src/components/Navbar/Navbar.js":"13","/Users/sylvia/Documents/Blog/client/src/components/Home/home.js":"14","/Users/sylvia/Documents/Blog/client/src/reducers/auth.js":"15","/Users/sylvia/Documents/Blog/client/src/Auth/auth.js":"16","/Users/sylvia/Documents/Blog/client/src/Auth/input.js":"17","/Users/sylvia/Documents/Blog/client/src/actions/auth.js":"18"},{"size":508,"mtime":1642965158301,"results":"19","hashOfConfig":"20"},{"size":714,"mtime":1644200324003,"results":"21","hashOfConfig":"20"},{"size":2121,"mtime":1644090632526,"results":"22","hashOfConfig":"20"},{"size":245,"mtime":1642735698598,"results":"23","hashOfConfig":"20"},{"size":891,"mtime":1643423358712,"results":"24","hashOfConfig":"20"},{"size":2920,"mtime":1643504846484,"results":"25","hashOfConfig":"20"},{"size":5143,"mtime":1643852934389,"results":"26","hashOfConfig":"20"},{"size":1153,"mtime":1643265191236,"results":"27","hashOfConfig":"20"},{"size":147,"mtime":1643851819828,"results":"28","hashOfConfig":"20"},{"size":560,"mtime":1643857311340,"results":"29","hashOfConfig":"20"},{"size":407,"mtime":1643229894758,"results":"30","hashOfConfig":"20"},{"size":416,"mtime":1643073996098,"results":"31","hashOfConfig":"20"},{"size":2074,"mtime":1644200326496,"results":"32","hashOfConfig":"20"},{"size":853,"mtime":1643564563577,"results":"33","hashOfConfig":"20"},{"size":423,"mtime":1644197003279,"results":"34","hashOfConfig":"20"},{"size":5766,"mtime":1644361502839,"results":"35","hashOfConfig":"20"},{"size":1217,"mtime":1644272840316,"results":"36","hashOfConfig":"20"},{"size":439,"mtime":1644363007647,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4z0ace",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/Users/sylvia/Documents/Blog/client/src/index.js",[],["82","83"],"/Users/sylvia/Documents/Blog/client/src/App.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js",[],"/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js",[],["84","85"],"/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Post/post.js",["86"],"import React from \"react\";\nimport {\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n} from \"@material-ui/core/\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { likePost, deletePost } from \"../../actions/post\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  background-image: linear-gradient(to bottom, #ff000000 , #000000e0);\n  height: 480px;\n  width: 350px;\n  border-radius: 25px;\n  margin: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  /* &:hover {\n    transform: translateY(-10px);\n     background-image: linear-gradient(to bottom, #ff000000 , #000000e0);\n  } */\n`;\n\nconst ImageFile = styled.img`\n  height: 480px;\n  width: 350px;\n  z-index: -1;\n  position: absolute;\n  border-radius: 25px;\n`;\n\nconst Typography = styled.p`\n  color: white;\n  font-family: 'Rubik', sans-serif;\n  text-align: center;\n`;\nconst Message = styled.p`\n  color: white;\n  font-family: 'Rubik', sans-serif;\n`;\n\nconst CreatorTimeDiv = styled.div`\n  display: flex;\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst Title = styled.h2`\n  font-family: \"Abril Fatface\";\n  color: white;\n  text-align: center;\n  text-shadow: 2px 2px black;\n  font-size: 25px;\n  letter-spacing: 0.8px;\n`;\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Card>\n      <ImageFile src={post.selectedFile} title={post.title} />\n      <CreatorTimeDiv>\n        <Typography variant=\"h6\">{post.creator}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </CreatorTimeDiv>\n      <div></div>\n      <Title>{post.title}</Title>\n      <CardContent>\n        <Message>\n          {post.message}\n        </Message>\n      </CardContent>\n      <div>\n        <Typography variant=\"body2\" style={{color: \"#8947ef\"}} component=\"h2\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <CardActions style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n        <Button\n          size=\"small\"\n          style={{color: \"#8947ef\"}}\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount}{\" \"}\n        </Button>\n        <Button\n          size=\"small\"\n          style={{color: \"#8947ef\"}}\n          onClick={() => dispatch(deletePost(post._id))}\n        >\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => setCurrentId(post._id)}\n        >\n          <MoreHorizIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js",["87"],"import React, { useState, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport importGoogleFonts from \"import-google-fonts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { createPost, updatePost } from \"../../actions/post\";\nimport formpic from \"../media/formpic.svg\";\n\nconst MainDiv = styled.div`\n  display: flex;\n  align-items: center;\n  flex: wrap;\n  justify-content: center;\n  border-top: 120px;\n  flex-wrap: wrap;\n`;\nconst FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst GoogleFonts = importGoogleFonts(\n  createGlobalStyle,\n  null,\n  [\"Abril Fatface\"],\n  [\"Aclonica\"]\n);\n\nconst Header = styled.h1`\n  font-family: \"Abril Fatface\";\n  font-size: 90px;\n  font-weight: 700;\n  line-height: 94px;\n  color: white;\n`;\n\nconst Forum = styled.form`\n  background-color: #08080a45;\n  height: 700px;\n  width: 400px;\n  padding: 40px 80px;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-family: monospace;\n  justify-content: space-between;\n  font-size: large;\n  border: 2px solid pink;\n`;\n\nconst H3 = styled.h1`\n  color: coral;\n  text-align: center;\n`;\n\nconst Image= styled.img`\nheight: 900px;\nwidth: 900px;\n`\n\nconst Button = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #fc00ff 0%,\n    #00dbde 51%,\n    #fc00ff 100%\n  );\n\n  margin: 50px 0px;\n  font-family: \"Aclonica\";\n  font-size: 20px;\n  margin: 10px;\n  padding: 10px 45px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 2px #fc00ff; */\n  border-radius: 10px;\n  width: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n\nconst Button2 = styled.button`\n  display: inline-block;\n   padding: 0.35em 1.2em;\n   border: 0.1em solid #ffffff;\n   margin: 0 0.3em 0.3em 0;\n   border-radius: 0.12em;\n   box-sizing: border-box;\n   text-decoration: none;\n   font-family: \"Roboto\", sans-serif;\n   font-weight: 300;\n   color: #ffffff;\n   text-align: center;\n  background-color: #ffffff00;\n  height: 32px;\n\n  &:hover {\n     color: #000000;\n     background-color: #ffffff;\n  }\n`;\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <MainDiv id=\"form\">\n      <Image src={formpic} />\n      <FormDiv>\n      <Header> {currentId ? \"Editing\" : \"Create\"} a Post! </Header>\n      <Forum autoComplete=\"off\" onSubmit={handleSubmit}>\n        <H3> {currentId ? \"Editing your post\" : \"Write..\"}</H3>\n        <label for=\"Creator\">Author</label>\n        <input\n          type=\"text\"\n          id=\"author\"\n          name=\"author\"\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <label for=\"Title\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <label for=\"Text\">Text:</label>\n        <input\n          type=\"text\"\n          id=\"text\"\n          name=\"message\"\n          maxLength=\"300\"\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <label for=\"Text\">Hastags:</label>\n        <input\n          type=\"text\"\n          id=\"tags\"\n          name=\"tags\"\n          maxLength=\"30\"\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <ButtonDiv>\n          <Button type=\"submit\">Submit</Button>\n        </ButtonDiv>\n        <ButtonDiv>\n          <Button2 onClick={clear}>clear</Button2>\n        </ButtonDiv>\n      </Forum>\n      </FormDiv>\n    </MainDiv>\n  );\n};\nexport default Form;\n\n//currentID required to link with form to edit it from the post\n","/Users/sylvia/Documents/Blog/client/src/actions/post.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/index.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/posts.js",["88"],"export default (posts = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return action.payload;\n    case \"LIKE\":\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case \"CREATE\":\n      return [...posts, action.payload];\n    case \"UPDATE\":\n      return posts.map((post) => (post._id === action.payload._id ? action.payload._id : post));\n    case \"DELETE\":\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n//action.payload= updated posts\n","/Users/sylvia/Documents/Blog/client/src/API/index.js",[],"/Users/sylvia/Documents/Blog/client/src/api/index.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Navbar/Navbar.js",["89","90"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Typography, Toolbar, Avatar, Button } from \"@material-ui/core\";\nimport Auth from \"../../Auth/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst Profile = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n  align-items: center;\n  /* background: #37303c36; */\n  height: 80px;\n  width: 100%;\n`;\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const logout = () => {\n    dispatch({ type: \"LOGOUT\" });\n    navigate('/auth', {replace: true});\n    setUser(null)\n  };\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n\n  useEffect(() => {\n    const token = user?.token;\n\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n\n  //want to use this when we swtich from /auth-->/ .: useLocation\n\n  return (\n    <AppBar position=\"static\" style={{ backgroundColor: \"#37303c36\" }}>\n      <Toolbar>\n        {user?.result ? (\n          <Profile>\n            <Typography variant=\"h6\">{user?.result.name.charAt(0)} </Typography>\n            <Avatar\n              alt={user?.result.name}\n              src={user?.result.imageUrl}\n              style={{\n                margin: \"10px\",\n                borderRadius: \"50%\",\n                border: \"2px solid white\",\n              }}\n            >\n              {user?.result.name.charAt(0)}\n            </Avatar>\n            <Button variant=\"contained\" color=\"secondary\" onClick={logout}>\n              Logout\n            </Button>\n          </Profile>\n        ) : (\n          <Link to=\"/auth\" component={<Auth />}>\n            {\" \"}\n            <Button variant=\"contained\" color=\"primary\">\n              {\" \"}\n              Sign In\n            </Button>\n          </Link>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/sylvia/Documents/Blog/client/src/components/Home/home.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/auth.js",[],"/Users/sylvia/Documents/Blog/client/src/Auth/auth.js",["91","92"],"import React, { useState } from \"react\";\nimport { Avatar, Button, Grid } from \"@material-ui/core\";\nimport { GoogleLogin } from \"react-google-login\";\nimport styled from \"styled-components\";\nimport Input from \"./input\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport Lock from \"../components/media/lock.svg\";\nimport Wave from \"../components/media/wave.svg\";\nimport { signin, signout } from \"../actions/auth\";\n\nconst BackgroundImg = styled.img`\n  width: 100%;\n  height: 100vh;\n`;\nconst MainDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 0px;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  margin: 0;\n  /* background: linear-gradient(\n    247.39deg,\n    #af47ef 0%,\n    rgba(24, 0, 62, 0.929213) 46.22%,\n    rgba(67, 86, 135, 0.86) 100%\n  ); */\n  background-size: cover;\n */\n  width: 100%;\n  height: 100vh;\n`;\n\nconst Form = styled.div`\n  position: absolute;\n  background-color: #8e8093b5;\n  /* background-image: linear-gradient(\n    to bottom,\n    #ffffffd6 0%,\n    #ce7effa1 60%,\n    #140d18ad 100%\n  ); */\n  height: 700px;\n  width: 400px;\n  padding: 40px 80px;\n  margin: 100px;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-family: system-ui;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  box-shadow: 15px 15px 50px 15px #00000045;\n`;\n\nconst FormDiv = styled.div`\n  position: relative;\n  left: -18px;\n`;\n\nconst Button1 = styled.button`\n  height: 40px;\n  color: white;\n  background-image: linear-gradient(\n    to bottom,\n    #00dbde 0%,\n    #0072ff 51%,\n    #00dbde 100%\n  );\n  margin: 10px;\n`;\nconst Locking = styled.img`\n  height: 50px;\n  width: 50px;\n`;\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [registerData, setRegisterData] = useState(initialState);\n  const [showPassword, setShowPassword] = useState(\"false\");\n  const [isSignup, setSignup] = useState(\"false\");\n  // import signup form\n\n  const handleShowPassword = () =>\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n\n  const switchMode = () => {\n    setSignup((prevIsSignup) => !prevIsSignup);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if(isSignup){\n    //   dispatch(signup(registerData, navigate('/', {replace: true})));\n    // }\n    // else{\n\n    // }\n  };\n\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value });\n  };\n\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: \"AUTH\", data: { result, token } });\n      navigate(\"/\", { replace: true });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () =>\n    alert(\"Google Sign In was unsuccessful. Try again later\");\n\n  return (\n    <MainDiv>\n      <BackgroundImg src={Wave} />\n      <Form>\n        <h1> {isSignup ? \"Sign up\" : \"Sign in\"}</h1>\n        <Avatar>\n          <Locking src={Lock} />\n        </Avatar>\n        <form>\n          <FormDiv>\n            {isSignup && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  style={{ color: \"white\" }}\n                />\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                />\n              </>\n            )}\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              autocomplete=\"on\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            \n            {isSignup && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Repeat Password\"\n                handleChange={handleChange}\n                type=\"password\"\n                style={{ color: \"white\" }}\n              />\n            )}\n          </FormDiv>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginBottom: \"8px\", backgroundColor: \"#923fb5\" }}\n            onClick={handleSubmit}\n          >\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n\n          <GoogleLogin\n            clientId=\"831530185138-9a1suordsgu512o279sop8ggl4snqb99.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                color=\"primary\"\n                // style={{backgroundColor:\"#923fb5\"}}\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                // startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container>\n            <Button1 onClick={switchMode}>\n              {isSignup\n                ? \"Already have an account? Sign in\"\n                : \"Don't have an account? Sign Up\"}\n            </Button1>\n          </Grid>\n        </form>\n      </Form>\n    </MainDiv>\n  );\n};\nexport default Auth;\n","/Users/sylvia/Documents/Blog/client/src/Auth/input.js",[],"/Users/sylvia/Documents/Blog/client/src/actions/auth.js",["93"],"import * as api from '../API/index';\nimport { useNavigate } from \"react-router\";\n\nexport const signin = (registerData, navigate) => async(dispatch)=> {\n    const navigate = useNavigate();\ntry{\n    navigate('/', {replace: true})\n}\ncatch{\nconsole.log('error')\n}};\n\n\nexport const signout = (registerData,navigate) => async(dispatch)=> {\n    try{\n        navigate('/', {replace: true})\n    }\n    catch{\n        console.log('error')\n        }};",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":3,"nodeType":"102","messageId":"103","endLine":5,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":30,"column":7,"nodeType":"102","messageId":"103","endLine":30,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":1,"column":1,"nodeType":"107","endLine":16,"endColumn":3},{"ruleId":"100","severity":1,"message":"108","line":32,"column":11,"nodeType":"102","messageId":"103","endLine":32,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":35,"column":6,"nodeType":"111","endLine":35,"endColumn":16,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"113","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":16},{"ruleId":"100","severity":1,"message":"114","line":10,"column":18,"nodeType":"102","messageId":"103","endLine":10,"endColumn":25},{"ruleId":"100","severity":1,"message":"115","line":1,"column":13,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'GoogleFonts' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'signin' is defined but never used.","'signout' is defined but never used.","'api' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [location, user?.token]",{"range":"121","text":"122"},[1001,1011],"[location, user?.token]"]