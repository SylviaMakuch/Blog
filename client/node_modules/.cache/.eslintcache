[{"/Users/sylvia/Documents/Blog/client/src/index.js":"1","/Users/sylvia/Documents/Blog/client/src/App.js":"2","/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js":"3","/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js":"4","/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js":"5","/Users/sylvia/Documents/Blog/client/src/components/Post/post.js":"6","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js":"7","/Users/sylvia/Documents/Blog/client/src/actions/post.js":"8","/Users/sylvia/Documents/Blog/client/src/reducers/index.js":"9","/Users/sylvia/Documents/Blog/client/src/reducers/posts.js":"10","/Users/sylvia/Documents/Blog/client/src/API/index.js":"11","/Users/sylvia/Documents/Blog/client/src/api/index.js":"12"},{"size":508,"mtime":1642965158301,"results":"13","hashOfConfig":"14"},{"size":951,"mtime":1643184295572,"results":"15","hashOfConfig":"14"},{"size":1877,"mtime":1643093485891,"results":"16","hashOfConfig":"14"},{"size":245,"mtime":1642735698598,"results":"17","hashOfConfig":"14"},{"size":850,"mtime":1643182872304,"results":"18","hashOfConfig":"14"},{"size":2274,"mtime":1643181750534,"results":"19","hashOfConfig":"14"},{"size":3618,"mtime":1643184480284,"results":"20","hashOfConfig":"14"},{"size":1142,"mtime":1643184631603,"results":"21","hashOfConfig":"14"},{"size":114,"mtime":1642920524287,"results":"22","hashOfConfig":"14"},{"size":271,"mtime":1643077811888,"results":"23","hashOfConfig":"14"},{"size":413,"mtime":1643184523678,"results":"24","hashOfConfig":"14"},{"size":416,"mtime":1643073996098,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4z0ace",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sylvia/Documents/Blog/client/src/index.js",[],["56","57"],"/Users/sylvia/Documents/Blog/client/src/App.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Hero/hero.js",[],"/Users/sylvia/Documents/Blog/client/src/components/ScrollToTop.js",[],["58","59"],"/Users/sylvia/Documents/Blog/client/src/components/Posts/posts.js",[],"/Users/sylvia/Documents/Blog/client/src/components/Post/post.js",["60"],"import React from \"react\";\nimport {\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core/\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\n// import { likePost, deletePost } from \"../../../actions/posts\";\n\n\nconst Card = styled.div`\n  background-color: #08080a45;\n  height: 300px;\n  width: 200px;\n  border-radius: 25px;\n`;\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Card>\n      <CardMedia\n        image={\n          post.selectedFile ||\n          \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n        }\n        title={post.title}\n      />\n      <div>\n        <Typography variant=\"h6\">{post.creator}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      <div>\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => setCurrentId(post._id)}\n        >\n          <MoreHorizIcon fontSize=\"default\" />\n        </Button>\n      </div>\n      <div>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        {post.title}\n      </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.message}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n        //   onClick={() => dispatch(likePost(post._id))}\n        >\n          <ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount}{\" \"}\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n        //   onClick={() => dispatch(deletePost(post._id))}\n        >\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","/Users/sylvia/Documents/Blog/client/src/components/Form/form.js",["61"],"import React, { useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport importGoogleFonts from \"import-google-fonts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport { createPost, updatePost } from \"../../actions/post\";\n\nconst MainDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst GoogleFonts = importGoogleFonts(\n  createGlobalStyle,\n  null,\n  [\"Abril Fatface\"],\n  [\"Aclonica\"]\n);\n\nconst Header = styled.h2`\n  font-family: \"Abril Fatface\";\n  font-size: 90px;\n  font-weight: 700;\n  line-height: 94px;\n  color: white;\n  margin-top: 100px;\n`;\n\nconst Forum = styled.form`\n  background-color: #08080a45;\n  height: 500px;\n  width: 300px;\n  padding: 100px;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-family: monospace;\n  justify-content: space-around;\n  font-size: large;\n`;\n\nconst Button = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #fc00ff 0%,\n    #00dbde 51%,\n    #fc00ff 100%\n  );\n  margin-left: 50px;\n  font-family: \"Aclonica\";\n  font-size: 20px;\n  margin: 10px;\n  padding: 10px 45px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 2px #fc00ff; */\n  border-radius: 10px;\n  width: 50%;\n  display: block;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n\nfunction Form({currentId, currentId}) {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const dispatch = useDispatch;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (currentId) {\n      dispatch(createPost(currentID,updatePost));\n    } else{\n    dispatch(createPost(postData));\n    }\n  };\n\n  return (\n    <MainDiv>\n      <Header> Create a Post! </Header>\n      <Forum autoComplete=\"off\" onSubmit={handleSubmit}>\n        <label for=\"Creator\">Author</label>\n        <input\n          type=\"text\"\n          id=\"author\"\n          name=\"author\"\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <label for=\"Title\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <label for=\"Text\">Text:</label>\n        <input\n          type=\"text\"\n          id=\"text\"\n          name=\"message\"\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <label for=\"Text\">Hastags:</label>\n        <input\n          type=\"text\"\n          id=\"tags\"\n          name=\"tags\"\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <ButtonDiv>\n          <Button type=\"submit\">Submit</Button>\n        </ButtonDiv>\n      </Forum>\n    </MainDiv>\n  );\n}\nexport default Form;\n\n\n//currentID required to link with form to edit it from the post ","/Users/sylvia/Documents/Blog/client/src/actions/post.js",["62"],"import * as api from \"../API/index\";\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n    console.log(data);\n\n    dispatch({ type: \"FETCH_ALL\", payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\n//this mean we are importing from actions- as api and be able to use the fetchPosts from the axios file//\n//Action Creators, function returning actions, payload= stored data//\n// when working with async fx, we can use R.thunk, allowing us to specify an additional arrow fx which we will use async\n//now we have access to dispatch w/async//\n//catching all the data from API, data reps the post\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: \"CREATE\", payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(id, post);\n//updated post\n    dispatch({ type: \"UPDATE\", payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n","/Users/sylvia/Documents/Blog/client/src/reducers/index.js",[],"/Users/sylvia/Documents/Blog/client/src/reducers/posts.js",["63"],"export default (posts = [], action) => {\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n    case 'CREATE':\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n};\n// export default reducer\n//action.payload= our posts\n","/Users/sylvia/Documents/Blog/client/src/API/index.js",[],"/Users/sylvia/Documents/Blog/client/src/api/index.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":27,"column":9,"nodeType":"72","messageId":"73","endLine":27,"endColumn":17},{"ruleId":null,"fatal":true,"severity":2,"message":"74","line":79,"column":26},{"ruleId":"75","severity":2,"message":"76","line":33,"column":43,"nodeType":"72","messageId":"77","endLine":33,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":1,"column":1,"nodeType":"80","endLine":10,"endColumn":3},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Argument name clash. (79:26)","no-undef","'id' is not defined.","undef","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]